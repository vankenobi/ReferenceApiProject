Ò
V/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Utils/UserBaseValidator.cs
	namespace 	
	Reference
 
. 
Api 
. 
Utils 
{ 
public 
abstract 
class 
UserBaseValidator (
<( )
T) *
>* +
:, -
AbstractValidator. ?
<? @
T@ A
>A B
whereC H
TI J
:J K
ICommonPropertiesL ]
{ 
	protected		 
UserBaseValidator		 
(		 
)		 
{

 
RuleFor 
( 
x 
=> 
x 
) 
. 
NotNull 
( 
) 
; 
RuleFor 
( 
x 
=> 
x 
. 
Name 
)  
. 
NotEmpty 
( 
) 
. 
MaximumLength 
( 
$num !
)! "
;" #
RuleFor 
( 
x 
=> 
x 
. 
Password #
)# $
. 
NotEmpty 
( 
) 
. 
MaximumLength 
( 
$num !
)! "
;" #
RuleFor 
( 
x 
=> 
x 
. 
Email  
)  !
. 
NotEmpty 
( 
) 
. 
EmailAddress 
( 
) 
;  
} 	
} 
} ä

X/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Utils/UpdateUserValidator.cs
	namespace 	
	Reference
 
. 
Api 
. 
Utils 
{ 
public 
class 
UpdateUserValidator !
:" #
AbstractValidator$ 5
<5 6
UpdateUserRequest6 G
>G H
{ 
public		 
UpdateUserValidator			 
(		 
)		 
{

 
RuleFor 
( 
x 
=> 
x 
. 
Id 
) 
. 
NotEmpty 
( 
) 
. 
Custom 
( 
( 
id 
, 
context $
)$ %
=>& (
{ 
if 
( 
! 
Guid 
. 
TryParse &
(& '
id' )
.) *
ToString* 2
(2 3
)3 4
,4 5
out6 9
_: ;
); <
)< =
{ 
context 
.  

AddFailure  *
(* +
$str+ A
)A B
;B C
} 
} 
) 
; 
} 	
} 
} ¤
X/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Utils/CreateUserValidator.cs
	namespace 	
	Reference
 
. 
Api 
. 
Utils 
{ 
public 
class 
CreateUserValidator !
:" #
UserBaseValidator$ 5
<5 6
CreateUserRequest6 G
>G H
{ 
public		 
CreateUserValidator			 
(		 
)		 
{

 
} 	
} 
} Þ
_/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Services/Interfaces/IUserService.cs
	namespace 	
	Reference
 
. 
Api 
. 
Services  
.  !

Interfaces! +
{ 
public 
	interface 
IUserService 
{		 
Task

 
<

 
GetUserResponse

 
>

 
GetUserById

 #
(

# $
Guid

$ (
id

) +
)

+ ,
;

, -
Task 
< 
Guid 
> 

CreateUser 
( 
CreateUserRequest )
createUserRequest* ;
); <
;< =
Task 
< 
bool 
> 

UpdateUser 
( 
UpdateUserRequest /
updateUserRequest0 A
)A B
;B C
Task 
< 
bool 
> 

DeleteUser 
( 
Guid "
id# %
)% &
;& '
} 
} É7
c/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Services/Implementations/UserService.cs
	namespace

 	
	Reference


 
.

 
Api

 
.

 
Services

  
.

  !
Implementations

! 0
{ 
public 
class 
UserService 
: 
IUserService (
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
ILogger  
<  !
IUserService! -
>- .
_logger/ 6
;6 7
public 
UserService 
( 
IUnitOfWork &

unitOfWork' 1
,1 2
IMapper3 :
mapper; A
,A B
ILoggerC J
<J K
IUserServiceK W
>W X
loggerY _
)_ `
{ 	
_unitOfWork 
= 

unitOfWork $
??% '
throw( -
new. 1!
ArgumentNullException2 G
(G H
nameofH N
(N O

unitOfWorkO Y
)Y Z
)Z [
;[ \
_mapper 
= 
mapper 
?? 
throw  %
new& )!
ArgumentNullException* ?
(? @
nameof@ F
(F G
mapperG M
)M N
)N O
;O P
_logger 
= 
logger 
?? 
throw  %
new& )!
ArgumentNullException* ?
(? @
nameof@ F
(F G
loggerG M
)M N
)N O
;O P
} 	
public 
async 
Task 
< 
GetUserResponse )
>) *
GetUserById+ 6
(6 7
Guid7 ;
id< >
)> ?
{ 	
var 
user 
= 
await 
_unitOfWork (
.( )
GetRepository) 6
<6 7
User7 ;
>; <
(< =
)= >
.> ?
GetById? F
(F G
idG I
)I J
;J K
var 
response 
= 
_mapper "
." #
Map# &
<& '
GetUserResponse' 6
>6 7
(7 8
user8 <
)< =
;= >
return 
response 
; 
} 	
public   
async   
Task   
<   
Guid   
>   

CreateUser    *
(  * +
CreateUserRequest  + <
createUserRequest  = N
)  N O
{!! 	
var"" 
user"" 
="" 
_mapper"" 
."" 
Map"" "
<""" #
User""# '
>""' (
(""( )
createUserRequest"") :
)"": ;
;""; <
await$$ 
_unitOfWork$$ 
.$$ 
GetRepository$$ +
<$$+ ,
User$$, 0
>$$0 1
($$1 2
)$$2 3
.$$3 4
Add$$4 7
($$7 8
user$$8 <
)$$< =
;$$= >
await%% 
_unitOfWork%% 
.%% 
CompleteAsync%% +
(%%+ ,
)%%, -
;%%- .
return'' 
user'' 
.'' 
Id'' 
;'' 
}(( 	
public** 
async** 
Task** 
<** 
bool** 
>** 

DeleteUser**  *
(*** +
Guid**+ /
id**0 2
)**2 3
{++ 	
var,, 
user,, 
=,, 
await,, 
_unitOfWork,, (
.,,( )
GetRepository,,) 6
<,,6 7
User,,7 ;
>,,; <
(,,< =
),,= >
.,,> ?
GetById,,? F
(,,F G
id,,G I
),,I J
;,,J K
if-- 
(-- 
user-- 
==-- 
null-- 
)-- 
{.. 
_logger// 
.// 

LogWarning// "
(//" #
$str//# O
,//O P
id//Q S
)//S T
;//T U
return00 
false00 
;00 
}11 
else22 
{33 
var44 
result44 
=44 
_unitOfWork44 (
.44( )
GetRepository44) 6
<446 7
User447 ;
>44; <
(44< =
)44= >
.44> ?
Delete44? E
(44E F
user44F J
)44J K
;44K L
await55 
_unitOfWork55 !
.55! "
CompleteAsync55" /
(55/ 0
)550 1
;551 2
return66 
result66 
;66 
}77 
}88 	
public:: 
async:: 
Task:: 
<:: 
bool:: 
>:: 

UpdateUser::  *
(::* +
UpdateUserRequest::+ <
updateUserRequest::= N
)::N O
{;; 	
var<< 
user<< 
=<< 
await<< 
_unitOfWork<< (
.<<( )
GetRepository<<) 6
<<<6 7
User<<7 ;
><<; <
(<<< =
)<<= >
.<<> ?
GetById<<? F
(<<F G
updateUserRequest<<G X
.<<X Y
Id<<Y [
)<<[ \
;<<\ ]
if== 
(== 
user== 
==== 
null== 
)== 
{>> 
_logger?? 
.?? 

LogWarning?? "
(??" #
$str??# M
,??M N
updateUserRequest??O `
.??` a
Id??a c
)??c d
;??d e
return@@ 
false@@ 
;@@ 
}AA 
elseBB 
{CC 
varDD 
entityDD 
=DD 
_mapperDD $
.DD$ %
MapDD% (
<DD( )
UserDD) -
>DD- .
(DD. /
updateUserRequestDD/ @
)DD@ A
;DDA B
entityFF 
.FF 
	UpdatedAtFF  
=FF! "
DateTimeFF# +
.FF+ ,
UtcNowFF, 2
;FF2 3
entityGG 
.GG 
	CreatedAtGG  
=GG! "
userGG# '
.GG' (
	CreatedAtGG( 1
;GG1 2
varII 
resultII 
=II 
_unitOfWorkII (
.II( )
GetRepositoryII) 6
<II6 7
UserII7 ;
>II; <
(II< =
)II= >
.II> ?
UpsertII? E
(IIE F
entityIIF L
)IIL M
;IIM N
awaitJJ 
_unitOfWorkJJ !
.JJ! "
CompleteAsyncJJ" /
(JJ/ 0
)JJ0 1
;JJ1 2
returnKK 
resultKK 
;KK 
}LL 
}MM 	
}NN 
}OO ã
f/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Repositories/Interfaces/IUserRepository.cs
	namespace 	
	Reference
 
. 
Api 
. 
Repositories $
.$ %

Interfaces% /
{ 
public 

	interface 
IUserRepository $
:% &
IGenericRepository' 9
<9 :
User: >
>> ?
{ 
}		 
}

 ó
b/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Repositories/Interfaces/IUnitOfWork.cs
	namespace 	
	Reference
 
. 
Api 
. 
Repositories $
.$ %

Interfaces% /
{ 
public 

	interface 
IUnitOfWork  
{ 
IGenericRepository 
< 
TEntity "
>" #
GetRepository$ 1
<1 2
TEntity2 9
>9 :
(: ;
); <
where= B
TEntityC J
:K L

BaseEntityM W
;W X
Task		 
CompleteAsync		 
(		 
)		 
;		 
}

 
} Ê
i/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Repositories/Interfaces/IGenericRepository.cs
	namespace 	
	Reference
 
. 
Api 
. 
Repositories $
.$ %

Interfaces% /
{ 
public 

	interface 
IGenericRepository '
<' (
T( )
>) *
where+ 0
T1 2
:3 4
class5 :
{ 
Task		 
<		 
IEnumerable		 
<		 
T		 
>		 
>		 
All		  
(		  !
)		! "
;		" #
Task 
< 
T 
? 
> 
GetById 
( 
Guid 
id  
)  !
;! "
Task 
< 
bool 
> 
Add 
( 
T 
entity 
)  
;  !
bool 
Delete 
( 
T 
entity 
) 
; 
bool 
Upsert 
( 
T 
entity 
) 
; 

IQueryable 
< 
T 
> 
GetEntities !
(! "

Expression" ,
<, -
Func- 1
<1 2
T2 3
,3 4
bool5 9
>9 :
>: ;
	predicate< E
)E F
;F G
Task 
< 
bool 
> 
Any 
( 
Guid 
id 
) 
;  
} 
} 
j/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Repositories/Implementations/UserRepository.cs
	namespace 	
	Reference
 
. 
Api 
. 
Repositories $
.$ %
Implementations% 4
{ 
public 

class 
UserRepository 
:  !
GenericRepository" 3
<3 4
User4 8
>8 9
,9 :
IUserRepository; J
{		 
} 
} Á
f/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Repositories/Implementations/UnitOfWork.cs
	namespace 	
	Reference
 
. 
Api 
. 
Repositories $
.$ %
Implementations% 4
{ 
public 

sealed 
class 

UnitOfWork "
:# $
IUnitOfWork% 0
,0 1
IDisposable2 =
{		 
private

 
readonly

 
DataContext

 $
_context

% -
;

- .
public 
readonly 
ILogger 
_logger  '
;' (
private 
readonly 

Dictionary #
<# $
Type$ (
,( )
object* 0
>0 1
_repositories2 ?
;? @
public 

UnitOfWork 
( 
DataContext %
context& -
,- .
ILoggerFactory/ =
logger> D
)D E
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
. 
CreateLogger )
() *
$str* 0
)0 1
;1 2
_repositories 
= 
new 

Dictionary  *
<* +
Type+ /
,/ 0
object1 7
>7 8
(8 9
)9 :
;: ;
} 	
public 
async 
Task 
CompleteAsync '
(' (
)( )
{ 	
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
void 
Rollback 
( 
) 
{ 	
} 	
public 
IGenericRepository !
<! "
TEntity" )
>) *
GetRepository+ 8
<8 9
TEntity9 @
>@ A
(A B
)B C
whereD I
TEntityJ Q
:R S

BaseEntityT ^
{   	
if!! 
(!! 
_repositories!! 
.!! 
ContainsKey!! )
(!!) *
typeof!!* 0
(!!0 1
TEntity!!1 8
)!!8 9
)!!9 :
)!!: ;
{"" 
return## 
(## 
IGenericRepository## *
<##* +
TEntity##+ 2
>##2 3
)##3 4
_repositories##4 A
[##A B
typeof##B H
(##H I
TEntity##I P
)##P Q
]##Q R
;##R S
}$$ 
var&& 

repository&& 
=&& 
new&&  
GenericRepository&&! 2
<&&2 3
TEntity&&3 :
>&&: ;
(&&; <
_context&&< D
,&&D E
_logger&&F M
)&&M N
;&&N O
_repositories'' 
.'' 
Add'' 
('' 
typeof'' $
(''$ %
TEntity''% ,
)'', -
,''- .

repository''/ 9
)''9 :
;'': ;
return(( 

repository(( 
;(( 
})) 	
public++ 
void++ 
Dispose++ 
(++ 
)++ 
{,, 	
_context-- 
.-- 
Dispose-- 
(-- 
)-- 
;-- 
GC.. 
... 
SuppressFinalize.. 
(..  
this..  $
)..$ %
;..% &
}// 	
}11 
}22 &
F/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 

AddLogging 
( 
) 
; 
builder 
. 
Configuration 
. 
SetBasePath 
( 
	Directory 
. 
GetCurrentDirectory .
(. /
)/ 0
)0 1
. 
AddJsonFile 
( 
$str #
,# $
optional% -
:- .
false/ 4
,4 5
reloadOnChange6 D
:D E
trueF J
)J K
. 
AddJsonFile 
( 
$" 
$str 
{  
builder  '
.' (
Environment( 3
.3 4
EnvironmentName4 C
}C D
$strD I
"I J
,J K
optionalL T
:T U
trueV Z
,Z [
reloadOnChange\ j
:j k
truel p
)p q
. #
AddEnvironmentVariables 
( 
) 
; 
var 
connectionString 
= 
builder 
. 
Configuration ,
., -
GetConnectionString- @
(@ A
$strA M
)M N
;N O
builder 
. 
Services 
. 
AddDbContext 
< 
DataContext )
>) *
(* +
options+ 2
=>3 5
options 
. 
	UseNpgsql 
( 
connectionString &
!& '
)' (
)( )
;) *
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder   
.   
Services   
.   
	AddScoped   
<   
IUserRepository   *
,  * +
UserRepository  , :
>  : ;
(  ; <
)  < =
;  = >
builder!! 
.!! 
Services!! 
.!! 
	AddScoped!! 
<!! 
IUserService!! '
,!!' (
UserService!!) 4
>!!4 5
(!!5 6
)!!6 7
;!!7 8
builder"" 
."" 
Services"" 
."" 
	AddScoped"" 
<"" 
IUnitOfWork"" &
,""& '

UnitOfWork""( 2
>""2 3
(""3 4
)""4 5
;""5 6
builder%% 
.%% 
Services%% 
.%% 
AddHealthChecks%%  
(%%  !
)%%! "
;%%" #
builder(( 
.(( 
Services(( 
.(( 
ConfigureMapping(( !
(((! "
)((" #
;((# $
builder** 
.** 
Services** 
.** #
AddEndpointsApiExplorer** (
(**( )
)**) *
;*** +
builder++ 
.++ 
Services++ 
.++ 
AddSwaggerGen++ 
(++ 
)++  
;++  !
builder-- 
.-- 
Services-- 
.-- 
AddFluentValidation-- $
(--$ %
config--% +
=>--, .
config.. 

...
 *
RegisterValidatorsFromAssembly.. )
(..) *
Assembly..* 2
...2 3 
GetExecutingAssembly..3 G
(..G H
)..H I
)..I J
)..J K
;..K L
var00 
app00 
=00 	
builder00
 
.00 
Build00 
(00 
)00 
;00 
if33 
(33 
app33 
.33 
Environment33 
.33 
IsDevelopment33 !
(33! "
)33" #
)33# $
{44 
app55 
.55 

UseSwagger55 
(55 
)55 
;55 
app66 
.66 
UseSwaggerUI66 
(66 
)66 
;66 
}77 
app99 
.99  
UseCustomHealthCheck99 
(99 
)99 
;99 
app;; 
.;; 
UseHttpsRedirection;; 
(;; 
);; 
;;; 
app== 
.== 
UseAuthorization== 
(== 
)== 
;== 
app?? 
.?? 
MapControllers?? 
(?? 
)?? 
;?? 
appAA 
.AA 
RunAA 
(AA 
)AA 	
;AA	 
 8
m/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Repositories/Implementations/GenericRepository.cs
	namespace 	
	Reference
 
. 
Api 
. 
Repositories $
.$ %
Implementations% 4
{		 
public

 

class

 
GenericRepository

 "
<

" #
T

# $
>

$ %
:

& '
IGenericRepository

( :
<

: ;
T

; <
>

< =
where

> C
T

D E
:

F G

BaseEntity

H R
{ 
private 
readonly 
DataContext $
_context% -
;- .
private 
readonly 
DbSet 
< 
T  
>  !
dbSet" '
;' (
private 
readonly 
ILogger  
_logger! (
;( )
public 
GenericRepository  
(  !
DataContext 
context 
,  
ILogger 
logger 
) 	
{ 	
_context 
= 
context 
?? !
throw" '
new( +!
ArgumentNullException, A
(A B
nameofB H
(H I
contextI P
)P Q
)Q R
;R S
_logger 
= 
logger 
?? 
throw  %
new& )!
ArgumentNullException* ?
(? @
nameof@ F
(F G
loggerG M
)M N
)N O
;O P
dbSet 
= 
_context 
. 
Set  
<  !
T! "
>" #
(# $
)$ %
;% &
} 	
public 
GenericRepository  
(  !
)! "
{# $
}% &
public 
virtual 
async 
Task !
<! "
IEnumerable" -
<- .
T. /
>/ 0
>0 1
All2 5
(5 6
)6 7
{ 	
return 
await 
dbSet 
. 
ToListAsync *
(* +
)+ ,
;, -
}   	
public"" 
virtual"" 
async"" 
Task"" !
<""! "
T""" #
?""# $
>""$ %
GetById""& -
(""- .
Guid"". 2
id""3 5
)""5 6
{## 	
try$$ 
{%% 
return&& 
await&& 
dbSet&& "
.&&" #
AsNoTracking&&# /
(&&/ 0
)&&0 1
.&&1 2
FirstOrDefaultAsync&&2 E
(&&E F
x&&F G
=>&&H J
x&&K L
.&&L M
Id&&M O
==&&P R
id&&S U
)&&U V
;&&V W
}'' 
catch(( 
((( 
	Exception(( 
e(( 
)(( 
{)) 
_logger** 
.** 
LogError**  
(**  !
e**! "
,**" #
$str**$ G
,**G H
id**I K
)**K L
;**L M
throw++ 
;++ 
},, 
}-- 	
public// 
virtual// 
async// 
Task// !
<//! "
bool//" &
>//& '
Add//( +
(//+ ,
T//, -
entity//. 4
)//4 5
{00 	
try11 
{22 
await33 
dbSet33 
.33 
AddAsync33 $
(33$ %
entity33% +
)33+ ,
;33, -
return44 
true44 
;44 
}55 
catch66 
(66 
	Exception66 
e66 
)66 
{77 
_logger88 
.88 
LogError88  
(88  !
e88! "
,88" #
$str88$ 9
)889 :
;88: ;
throw99 
;99 
}:: 
};; 	
public== 
virtual== 
bool== 
Delete== "
(==" #
T==# $
entity==% +
)==+ ,
{>> 	
try?? 
{@@ 
dbSetAA 
.AA 
RemoveAA 
(AA 
entityAA #
)AA# $
;AA$ %
returnBB 
trueBB 
;BB 
}CC 
catchDD 
(DD 
	ExceptionDD 
eDD 
)DD 
{EE 
_loggerFF 
.FF 
LogErrorFF  
(FF  !
eFF! "
,FF" #
$strFF$ H
,FFH I
entityFFJ P
.FFP Q
IdFFQ S
)FFS T
;FFT U
throwGG 
;GG 
}HH 
}II 	
publicKK 
virtualKK 
asyncKK 
TaskKK !
<KK! "
boolKK" &
>KK& '
AnyKK( +
(KK+ ,
GuidKK, 0
idKK1 3
)KK3 4
{LL 	
returnMM 
awaitMM 
dbSetMM 
.MM 
AnyAsyncMM '
(MM' (
xMM( )
=>MM* ,
xMM- .
.MM. /
IdMM/ 1
==MM2 4
idMM5 7
)MM7 8
;MM8 9
}NN 	
publicQQ 

IQueryableQQ 
<QQ 
TQQ 
>QQ 
GetEntitiesQQ (
(QQ( )

ExpressionQQ) 3
<QQ3 4
FuncQQ4 8
<QQ8 9
TQQ9 :
,QQ: ;
boolQQ< @
>QQ@ A
>QQA B
	predicateQQC L
)QQL M
{RR 	
trySS 
{TT 

IQueryableUU 
<UU 
TUU 
>UU 
queryUU #
=UU$ %
_contextUU& .
.UU. /
SetUU/ 2
<UU2 3
TUU3 4
>UU4 5
(UU5 6
)UU6 7
.UU7 8
WhereUU8 =
(UU= >
	predicateUU> G
)UUG H
;UUH I
returnVV 
queryVV 
;VV 
}WW 
catchXX 
(XX 
	ExceptionXX 
exXX 
)XX  
{YY 
ConsoleZZ 
.ZZ 
	WriteLineZZ !
(ZZ! "
$strZZ" B
+ZZC D
exZZE G
.ZZG H
MessageZZH O
)ZZO P
;ZZP Q
throw[[ 
;[[ 
}\\ 
}]] 	
public`` 
bool`` 
Upsert`` 
(`` 
T`` 
entity`` #
)``# $
{aa 	
trybb 
{cc 
dbSetdd 
.dd 
Updatedd 
(dd 
entitydd #
)dd# $
;dd$ %
returnee 
trueee 
;ee 
}ff 
catchgg 
(gg 
	Exceptiongg 
exgg 
)gg  
{hh 
Consoleii 
.ii 
	WriteLineii !
(ii! "
$strii" A
+iiB C
exiiD F
.iiF G
MessageiiG N
)iiN O
;iiO P
throwjj 
;jj 
}kk 
}ll 	
}mm 
}nn 

J/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Models/User.cs
	namespace 	
	Reference
 
. 
Api 
. 
Models 
{ 
public 
class 
User 
: 

BaseEntity 
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
=		* +
string		, 2
.		2 3
Empty		3 8
;		8 9
}

 
} 
P/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Models/BaseEntity.cs
	namespace 	
	Reference
 
. 
Api 
. 
Models 
{ 
public 
class 

BaseEntity 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
	UpdatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
}		 
}

 
`/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Migrations/20240410133420_Initial.cs
	namespace 	
	Reference
 
. 
Api 
. 

Migrations "
{ 
public		 

partial		 
class		 
Initial		  
:		! "
	Migration		# ,
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
,N O
Surname 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
	CreatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= W
,W X
nullableY a
:a b
falsec h
)h i
,i j
	UpdatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= W
,W X
nullableY a
:a b
falsec h
)h i
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
} 	
	protected!! 
override!! 
void!! 
Down!!  $
(!!$ %
MigrationBuilder!!% 5
migrationBuilder!!6 F
)!!F G
{"" 	
migrationBuilder## 
.## 
	DropTable## &
(##& '
name$$ 
:$$ 
$str$$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' 
^/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Mapper/AutoMapperMappingProfile.cs
	namespace 	
	Reference
 
. 
Api 
. 
Mapper 
{ 
public		 
class		 $
AutoMapperMappingProfile		 &
:		' (
Profile		) 0
{

 
public $
AutoMapperMappingProfile	 !
(! "
)" #
{ 
	CreateMap 
< 
User 
, 
GetUserResponse "
>" #
(# $
)$ %
. 
	ForMember 
( 
i 
=> 
i 
. 
FullName 
, 
y  !
=>" $
y% &
.& '
MapFrom' .
(. /
z/ 0
=>1 3
z4 5
.5 6
Name6 :
+; <
$str= @
+A B
zC D
.D E
SurnameE L
)L M
)M N
. 
	ForMember 
( 
i 
=> 
i 
. 
	CreatedAt 
,  
y! "
=># %
y& '
.' (
MapFrom( /
(/ 0
z0 1
=>2 4
z5 6
.6 7
	CreatedAt7 @
.@ A
ToLocalTimeA L
(L M
)M N
)N O
)O P
. 
	ForMember 
( 
i 
=> 
i 
. 
	UpdatedAt 
,  
y! "
=># %
y& '
.' (
MapFrom( /
(/ 0
z0 1
=>2 4
z5 6
.6 7
	UpdatedAt7 @
.@ A
ToLocalTimeA L
(L M
)M N
)N O
)O P
;P Q
	CreateMap 
< 
CreateUserRequest '
,' (
User) -
>- .
(. /
)/ 0
;0 1
	CreateMap 
< 
UpdateUserRequest 
, 
User  $
>$ %
(% &
)& '
. 
	ForMember 
( 
x 
=> 
x 
. 
	CreatedAt 
,  
y! "
=># %
y& '
.' (
Ignore( .
(. /
)/ 0
)0 1
;1 2
} 	
} 
} ¤
g/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Extensions/HealthCheckConfigureExtension.cs
	namespace 	
	Reference
 
. 
Api 
. 

Extensions "
{ 
public 
static 
class )
HealthCheckConfigureExtension 2
{ 
public 
static	 
IApplicationBuilder # 
UseCustomHealthCheck$ 8
(8 9
this9 =
IApplicationBuilder> Q
appR U
)U V
{ 
app 
. 
UseHealthChecks 
(  
$str  -
,- .
new/ 2
	Microsoft3 <
.< =

AspNetCore= G
.G H
DiagnosticsH S
.S T
HealthChecksT `
.` a
HealthCheckOptionsa s
(s t
)t u
{		 
ResponseWriter

 
=

  
async

! &
(

' (
context

( /
,

/ 0
report

1 7
)

7 8
=>

9 ;
{

< =
await 
context !
.! "
Response" *
.* +

WriteAsync+ 5
(5 6
$str6 :
): ;
;; <
} 
} 
) 
; 
return 
app 
; 
} 	
} 
} «

j/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Extensions/ConfigureMappingProfileExtension.cs
	namespace 	
	Reference
 
. 
Api 
. 

Extensions "
{ 
public 
static 
class ,
 ConfigureMappingProfileExtension 5
{ 
public		 
static			 
IServiceCollection		 "
ConfigureMapping		# 3
(		3 4
this		4 8
IServiceCollection		9 K
service		L S
)		S T
{

 
var 
mappingConfig 
= 
new 
MapperConfiguration .
(. /
i/ 0
=>1 3
i4 5
.5 6

AddProfile6 @
(@ A
newA D$
AutoMapperMappingProfileE ]
(] ^
)^ _
)_ `
)` a
;a b
IMapper 

mapper 
= 
mappingConfig !
.! "
CreateMapper" .
(. /
)/ 0
;0 1
service 

.
 
AddSingleton 
( 
mapper 
) 
;  
return 	
service
 
; 
} 
} 
} ù

]/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Dtos/Responses/GetUserResponse.cs
	namespace 	
	Reference
 
. 
Api 
. 
Dtos 
. 
	Responses &
{ 
public 
class 
GetUserResponse 
{ 
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
string		/ 5
.		5 6
Empty		6 ;
;		; <
public

 
string

 
Email

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
string

, 2
.

2 3
Empty

3 8
;

8 9
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
	UpdatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ê
^/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Dtos/Requests/UpdateUserRequest.cs
	namespace 	
	Reference
 
. 
Api 
. 
Dtos 
. 
Requests %
{ 
public 
class 
UpdateUserRequest 
:  !
ICommonProperties" 3
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
string		+ 1
.		1 2
Empty		2 7
;		7 8
public

 
string

 
Surname

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
=

, -
string

. 4
.

4 5
Empty

5 :
;

: ;
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
} 
} Ü
^/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Dtos/Requests/ICommonProperties.cs
	namespace 	
	Reference
 
. 
Api 
. 
Dtos 
. 
Requests %
{ 
public 

	interface 
ICommonProperties &
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
Email

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
} 
} Ö

^/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Dtos/Requests/CreateUserRequest.cs
	namespace 	
	Reference
 
. 
Api 
. 
Dtos 
. 
Requests %
{ 
public 

class 
CreateUserRequest "
:# $
ICommonProperties% 6
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
string		/ 5
.		5 6
Empty		6 ;
;		; <
public

 
string

 
Email

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
string

, 2
.

2 3
Empty

3 8
;

8 9
} 
} ð
O/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Data/DataContext.cs
	namespace 	
	Reference
 
. 
Api 
. 
Data 
{ 
public 

class 
DataContext 
: 
	DbContext (
{		 
public

 
DataContext

 
(

 
DbContextOptions

 +
<

+ ,
DataContext

, 7
>

7 8
options

9 @
)

@ A
:

B C
base

D H
(

H I
options

I P
)

P Q
{ 	
Database 
. 
EnsureCreated "
(" #
)# $
;$ %
Database 
. 
Migrate 
( 
) 
; 
} 	
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
override 
Task 
< 
int  
>  !
SaveChangesAsync" 2
(2 3
CancellationToken3 D
cancellationTokenE V
=W X
defaultY `
)` a
{ 	
SetCreatedAt 
( 
) 
; 
SetUpdatedAt 
( 
) 
; 
return 
base 
. 
SaveChangesAsync (
(( )
cancellationToken) :
): ;
;; <
} 	
private 
void 
SetCreatedAt !
(! "
)" #
{ 	
var 
entitiesAdded 
= 
ChangeTracker  -
.- .
Entries. 5
(5 6
)6 7
. 
Where 
( 
x 
=> 
x 
. 
State #
==$ &
EntityState' 2
.2 3
Added3 8
)8 9
. 
Select 
( 
x 
=> 
x 
. 
Entity %
)% &
. 
OfType 
< 

BaseEntity "
>" #
(# $
)$ %
;% &
foreach   
(   
var   
entity   
in    "
entitiesAdded  # 0
)  0 1
{!! 
entity"" 
."" 
	CreatedAt""  
=""! "
DateTime""# +
.""+ ,
UtcNow"", 2
;""2 3
}## 
}$$ 	
private&& 
void&& 
SetUpdatedAt&& !
(&&! "
)&&" #
{'' 	
var(( 
entitiesModified((  
=((! "
ChangeTracker((# 0
.((0 1
Entries((1 8
(((8 9
)((9 :
.)) 
Where)) 
()) 
x)) 
=>)) 
x)) 
.)) 
State)) #
==))$ &
EntityState))' 2
.))2 3
Modified))3 ;
))); <
.** 
Select** 
(** 
x** 
=>** 
x** 
.** 
Entity** %
)**% &
.++ 
OfType++ 
<++ 

BaseEntity++ "
>++" #
(++# $
)++$ %
;++% &
foreach-- 
(-- 
var-- 
entity-- 
in--  "
entitiesModified--# 3
)--3 4
{.. 
entity// 
.// 
	UpdatedAt//  
=//! "
DateTime//# +
.//+ ,
UtcNow//, 2
;//2 3
}11 
}22 	
}33 
}44 ç0
Y/Users/musakucuk/Projects/ReferenceApiProject/Reference.Api/Controllers/UserController.cs
	namespace

 	
	Reference


 
.

 
Api

 
.

 
Controllers

 #
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
UserController 
:  !

Controller" ,
{ 
private 
readonly 
IUserService %
_userService& 2
;2 3
private 
readonly 
ILogger  
<  !
UserController! /
>/ 0
_logger1 8
;8 9
public 
UserController 
( 
IUserService *
userService+ 6
,6 7
ILogger8 ?
<? @
UserController@ N
>N O
loggerP V
)V W
{ 	
_userService 
= 
userService &
;& '
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetUserById) 4
(4 5
Guid5 9
id: <
)< =
{ 	
try 
{ 
var 
item 
= 
await  
_userService! -
.- .
GetUserById. 9
(9 :
id: <
)< =
;= >
if 
( 
item 
== 
null  
)  !
{ 
return   
NotFound   #
(  # $
$str  $ 4
)  4 5
;  5 6
}!! 
return"" 
Ok"" 
("" 
item"" 
)"" 
;""  
}## 
catch$$ 
($$ 
	Exception$$ 
ex$$ 
)$$  
{%% 
_logger&& 
.&& 
LogError&&  
(&&  !
ex&&! #
,&&# $
$str&&% S
)&&S T
;&&T U
return'' 

StatusCode'' !
(''! "
$num''" %
,''% &
$str''' S
)''S T
;''T U
}(( 
})) 	
[,, 	
HttpPost,,	 
],, 
public-- 
async-- 
Task-- 
<-- 
IActionResult-- '
>--' (

CreateUser--) 3
(--3 4
CreateUserRequest--4 E
createUserRequest--F W
)--W X
{.. 	
try// 
{00 
var11 
createdUserId11 !
=11" #
await11$ )
_userService11* 6
.116 7

CreateUser117 A
(11A B
createUserRequest11B S
)11S T
;11T U
var22 
userUri22 
=22 
Url22 !
.22! "
Action22" (
(22( )
$str22) 6
,226 7
new228 ;
{22< =
id22> @
=22A B
createdUserId22C P
}22Q R
)22R S
;22S T
return44 

StatusCode44 !
(44! "
$num44" %
,44% &
userUri44' .
)44. /
;44/ 0
}55 
catch66 
(66 
	Exception66 
ex66 
)66  
{77 
_logger88 
.88 
LogError88  
(88  !
ex88! #
,88# $
$str88% P
)88P Q
;88Q R
return99 

StatusCode99 !
(99! "
$num99" %
,99% &
$str99' k
)99k l
;99l m
}:: 
}<< 	
[>> 	

HttpDelete>>	 
(>> 
$str>> 
)>> 
]>> 
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (

DeleteUser??) 3
(??3 4
Guid??4 8
id??9 ;
)??; <
{@@ 	
tryAA 
{BB 
varCC 
resultCC 
=CC 
awaitCC "
_userServiceCC# /
.CC/ 0

DeleteUserCC0 :
(CC: ;
idCC; =
)CC= >
;CC> ?
ifDD 
(DD 
!DD 
resultDD 
)DD 
returnEE 
NotFoundEE #
(EE# $
$"EE$ &
$strEE& 5
{EE5 6
idEE6 8
}EE8 9
$strEE9 P
"EEP Q
)EEQ R
;EER S
returnFF 
	NoContentFF  
(FF  !
)FF! "
;FF" #
}GG 
catchHH 
(HH 
	ExceptionHH 
exHH 
)HH  
{II 
_loggerJJ 
.JJ 
LogErrorJJ  
(JJ  !
exJJ! #
,JJ# $
$strJJ% P
)JJP Q
;JJQ R
returnKK 

StatusCodeKK !
(KK! "
$numKK" %
,KK% &
$strKK' k
)KKk l
;KKl m
}LL 
}MM 	
[OO 	
HttpPutOO	 
]OO 
publicPP 
asyncPP 
TaskPP 
<PP 
IActionResultPP '
>PP' (

UpdateUserPP) 3
(PP3 4
UpdateUserRequestPP4 E
updateUserRequestPPF W
)PPW X
{QQ 	
varRR 
resultRR 
=RR 
awaitRR 
_userServiceRR +
.RR+ ,

UpdateUserRR, 6
(RR6 7
updateUserRequestRR7 H
)RRH I
;RRI J
ifSS 
(SS 
!SS 
resultSS 
)SS 
returnTT 
NotFoundTT 
(TT  
$"TT  "
$strTT" 1
{TT1 2
updateUserRequestTT2 C
.TTC D
IdTTD F
}TTF G
$strTTG ^
"TT^ _
)TT_ `
;TT` a
returnUU 
	NoContentUU 
(UU 
)UU 
;UU 
}VV 	
}YY 
}ZZ 